---
- name: Deploy or teardown libvirt VM
  hosts: localhost
  become: yes
  gather_facts: yes
  vars_files:
    - ../inventory/rhel8_host_vars
    - ../inventory/kvm_host.yml
    - ../env/passwords
    - host_vars/idm_dns.yml
    - "host_vars/{{  generic_name }}.yml"
  vars:
    vm_name: "{{ generic_server_vm.generic_name }}"
    vm_cpu: "{{ generic_server_vm.generic_vcpu }}"
    vm_memory: "{{ generic_server_vm.generic_memory }}"
    vm_root_disk_size: "{{ generic_server_vm.generic_root_disk_size }}"
    vm_teardown: "{{ generic_server_vm.vm_teardown }}"
    vm_recreate: "{{ generic_server_vm.generic_recreate }}"
    vm_domain: "{{ domain }}"
    inventory_group: "{{ generic_server_vm.generic_group }}"
    extra_storage: "{{ generic_server_vm.generic_extra_storage }}"
    enable: "{{ generic_server_vm.generic_enable }}"
    current_vm_ip: "{{ hostvars[vm_name]['ansible_host'] }}"

  environment:
    IPA_HOST: "{{ ipa_host }}"
    IPA_USER: "{{ idm_admin_user }}"
    IPA_PASS: "{{ idm_admin_pwd }}"
    IPA_TIMEOUT: 40

  tasks:
    - name: Include deploy-kvm-vm role
      include_role:
        name: deploy-kvm-vm

    - name: determine if we are creating or deleting the DNS record
      set_fact:
        dns_a_result: "none"
        dns_ptr_result: "none"
        record_state: "{{ 'absent' if vm_teardown|bool else 'present' }}"
      tags: create_dns_records

    - name: Create or Delete {{ vm_name }} A Records
      ipa_dnsrecord:
        zone_name: "{{ domain }}"
        record_name: "{{ hostvars[vm_name].inventory_hostname }}"
        record_type: A
        #record_ttl: 300
        record_value: "{{ hostvars[vm_name].ansible_host }}"
        state: "{{ record_state }}"
        validate_certs: no
      tags: create_dns_records

    - name: Create or Delete {{ vm_name }} PTR Records
      ipa_dnsrecord:
        zone_name: "{{ qubinode_ptr }}"
        record_name: "{{ hostvars[vm_name].ansible_host.split('.')[3:4] | join('.') }}"
        record_type: PTR
        #record_ttl: 300
        record_value: "{{ hostvars[vm_name].inventory_hostname }}.{{ domain }}."
        state: "{{ record_state }}"
        validate_certs: no
      tags: create_dns_records

    - name: REMOVE|ensure {{ vm_name }} is removed from inventory
      lineinfile:
        path: "{{ inventory_file }}"
        regexp: "^{{ vm_name }}"
        state: absent
      when: vm_teardown|bool

