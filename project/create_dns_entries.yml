---
- name: set dns record state
  set_fact:
    record_state: "{{ 'absent' if vm_teardown|bool else 'present' }}"
  tags: create_dns_records

- name: check if A record for {{ vm_name }} exist
  vars:
    fqdn: "{{ vm_name }}.{{ domain }}"
  shell: dig +noall +answer +short {{ fqdn }}| tail -n1
  register: dns_a_result

- name: set ttl value when dns record not exist
  set_fact:
    a_ttl_value: 300
  when: dns_a_result.stdout == ''

- name: check if PTR record for {{ vm_name }} exist
  vars:
    ip: "{{ hostvars[vm_name].ansible_host }}"
  shell: dig +noall +answer +short -x {{ ip }}| tail -n1
  register: dns_ptr_result

- set_fact:
    create_a_record: false
    create_ptr_record: false

- name: set ttl value when dns A record not exist
  set_fact:
    a_ttl_value: 300
    create_a_record: true
  when: dns_a_result.stdout == ''

- name: set ttl value when dns PTR record not exist
  set_fact:
    ptr_ttl_value: 300
    create_ptr_record: true
  when: dns_ptr_result.stdout == ''

- name: Create/Delete {{ vm_name }} A Records
  ipa_dnsrecord:
    zone_name: "{{ domain }}"
    record_name: "{{ hostvars[vm_name].inventory_hostname }}"
    record_type: A
    #record_ttl: "{{ a_ttl_value | default(omit) }}"
    record_value: "{{ hostvars[vm_name].ansible_host }}"
    state: "{{ record_state }}"
    validate_certs: no
  tags: create_dns_records
  when: create_a_record|bool or vm_teardown|bool

- name: Create/Delete {{ vm_name }} PTR Records
  vars:
    vm_name: "{{ sat_server_vm.sat_name }}"
  ipa_dnsrecord:
    zone_name: "{{ qubinode_ptr }}"
    record_name: "{{ hostvars[vm_name].ansible_host.split('.')[3:4] | join('.') }}"
    record_type: PTR
    record_ttl: "{{ a_ttl_value | default(omit) }}"
    record_value: "{{ hostvars[vm_name].inventory_hostname }}.{{ domain }}."
    state: "{{ record_state }}"
    validate_certs: no
  tags: create_dns_records
  when: create_ptr_record|bool or vm_teardown|bool
